// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: EagleMessageProto.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "EagleMessageProto.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace EMS {

namespace {

const ::google::protobuf::Descriptor* EagleMessage_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  EagleMessage_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_EagleMessageProto_2eproto() {
  protobuf_AddDesc_EagleMessageProto_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "EagleMessageProto.proto");
  GOOGLE_CHECK(file != NULL);
  EagleMessage_descriptor_ = file->message_type(0);
  static const int EagleMessage_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EagleMessage, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EagleMessage, datetime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EagleMessage, sendername_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EagleMessage, label_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EagleMessage, recipientname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EagleMessage, innermessage_),
  };
  EagleMessage_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      EagleMessage_descriptor_,
      EagleMessage::default_instance_,
      EagleMessage_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EagleMessage, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EagleMessage, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(EagleMessage));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_EagleMessageProto_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    EagleMessage_descriptor_, &EagleMessage::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_EagleMessageProto_2eproto() {
  delete EagleMessage::default_instance_;
  delete EagleMessage_reflection_;
}

void protobuf_AddDesc_EagleMessageProto_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\027EagleMessageProto.proto\022\003EMS\"~\n\014EagleM"
    "essage\022\014\n\004type\030\001 \002(\t\022\020\n\010dateTime\030\004 \002(\003\022\022"
    "\n\nsenderName\030\005 \002(\t\022\r\n\005label\030\006 \003(\t\022\025\n\rrec"
    "ipientName\030\007 \001(\t\022\024\n\014innerMessage\030\010 \001(\014B\030"
    "\n\003EMSB\021EagleMessageProto", 184);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "EagleMessageProto.proto", &protobuf_RegisterTypes);
  EagleMessage::default_instance_ = new EagleMessage();
  EagleMessage::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_EagleMessageProto_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_EagleMessageProto_2eproto {
  StaticDescriptorInitializer_EagleMessageProto_2eproto() {
    protobuf_AddDesc_EagleMessageProto_2eproto();
  }
} static_descriptor_initializer_EagleMessageProto_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int EagleMessage::kTypeFieldNumber;
const int EagleMessage::kDateTimeFieldNumber;
const int EagleMessage::kSenderNameFieldNumber;
const int EagleMessage::kLabelFieldNumber;
const int EagleMessage::kRecipientNameFieldNumber;
const int EagleMessage::kInnerMessageFieldNumber;
#endif  // !_MSC_VER

EagleMessage::EagleMessage()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:EMS.EagleMessage)
}

void EagleMessage::InitAsDefaultInstance() {
}

EagleMessage::EagleMessage(const EagleMessage& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:EMS.EagleMessage)
}

void EagleMessage::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  type_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  datetime_ = GOOGLE_LONGLONG(0);
  sendername_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  recipientname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  innermessage_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

EagleMessage::~EagleMessage() {
  // @@protoc_insertion_point(destructor:EMS.EagleMessage)
  SharedDtor();
}

void EagleMessage::SharedDtor() {
  if (type_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete type_;
  }
  if (sendername_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sendername_;
  }
  if (recipientname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete recipientname_;
  }
  if (innermessage_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete innermessage_;
  }
  if (this != default_instance_) {
  }
}

void EagleMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EagleMessage::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EagleMessage_descriptor_;
}

const EagleMessage& EagleMessage::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_EagleMessageProto_2eproto();
  return *default_instance_;
}

EagleMessage* EagleMessage::default_instance_ = NULL;

EagleMessage* EagleMessage::New() const {
  return new EagleMessage;
}

void EagleMessage::Clear() {
  if (_has_bits_[0 / 32] & 55) {
    if (has_type()) {
      if (type_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        type_->clear();
      }
    }
    datetime_ = GOOGLE_LONGLONG(0);
    if (has_sendername()) {
      if (sendername_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        sendername_->clear();
      }
    }
    if (has_recipientname()) {
      if (recipientname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        recipientname_->clear();
      }
    }
    if (has_innermessage()) {
      if (innermessage_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        innermessage_->clear();
      }
    }
  }
  label_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool EagleMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:EMS.EagleMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string type = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->type().data(), this->type().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "type");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_dateTime;
        break;
      }

      // required int64 dateTime = 4;
      case 4: {
        if (tag == 32) {
         parse_dateTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &datetime_)));
          set_has_datetime();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_senderName;
        break;
      }

      // required string senderName = 5;
      case 5: {
        if (tag == 42) {
         parse_senderName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sendername()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->sendername().data(), this->sendername().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "sendername");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_label;
        break;
      }

      // repeated string label = 6;
      case 6: {
        if (tag == 50) {
         parse_label:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_label()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->label(this->label_size() - 1).data(),
            this->label(this->label_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "label");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_label;
        if (input->ExpectTag(58)) goto parse_recipientName;
        break;
      }

      // optional string recipientName = 7;
      case 7: {
        if (tag == 58) {
         parse_recipientName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_recipientname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->recipientname().data(), this->recipientname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "recipientname");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_innerMessage;
        break;
      }

      // optional bytes innerMessage = 8;
      case 8: {
        if (tag == 66) {
         parse_innerMessage:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_innermessage()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:EMS.EagleMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:EMS.EagleMessage)
  return false;
#undef DO_
}

void EagleMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:EMS.EagleMessage)
  // required string type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->type().data(), this->type().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->type(), output);
  }

  // required int64 dateTime = 4;
  if (has_datetime()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->datetime(), output);
  }

  // required string senderName = 5;
  if (has_sendername()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sendername().data(), this->sendername().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sendername");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->sendername(), output);
  }

  // repeated string label = 6;
  for (int i = 0; i < this->label_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
    this->label(i).data(), this->label(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE,
    "label");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->label(i), output);
  }

  // optional string recipientName = 7;
  if (has_recipientname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->recipientname().data(), this->recipientname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "recipientname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->recipientname(), output);
  }

  // optional bytes innerMessage = 8;
  if (has_innermessage()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      8, this->innermessage(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:EMS.EagleMessage)
}

::google::protobuf::uint8* EagleMessage::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:EMS.EagleMessage)
  // required string type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->type().data(), this->type().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->type(), target);
  }

  // required int64 dateTime = 4;
  if (has_datetime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->datetime(), target);
  }

  // required string senderName = 5;
  if (has_sendername()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sendername().data(), this->sendername().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sendername");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->sendername(), target);
  }

  // repeated string label = 6;
  for (int i = 0; i < this->label_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->label(i).data(), this->label(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "label");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(6, this->label(i), target);
  }

  // optional string recipientName = 7;
  if (has_recipientname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->recipientname().data(), this->recipientname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "recipientname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->recipientname(), target);
  }

  // optional bytes innerMessage = 8;
  if (has_innermessage()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        8, this->innermessage(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:EMS.EagleMessage)
  return target;
}

int EagleMessage::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->type());
    }

    // required int64 dateTime = 4;
    if (has_datetime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->datetime());
    }

    // required string senderName = 5;
    if (has_sendername()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->sendername());
    }

    // optional string recipientName = 7;
    if (has_recipientname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->recipientname());
    }

    // optional bytes innerMessage = 8;
    if (has_innermessage()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->innermessage());
    }

  }
  // repeated string label = 6;
  total_size += 1 * this->label_size();
  for (int i = 0; i < this->label_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->label(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EagleMessage::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const EagleMessage* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const EagleMessage*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void EagleMessage::MergeFrom(const EagleMessage& from) {
  GOOGLE_CHECK_NE(&from, this);
  label_.MergeFrom(from.label_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_datetime()) {
      set_datetime(from.datetime());
    }
    if (from.has_sendername()) {
      set_sendername(from.sendername());
    }
    if (from.has_recipientname()) {
      set_recipientname(from.recipientname());
    }
    if (from.has_innermessage()) {
      set_innermessage(from.innermessage());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void EagleMessage::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EagleMessage::CopyFrom(const EagleMessage& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EagleMessage::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void EagleMessage::Swap(EagleMessage* other) {
  if (other != this) {
    std::swap(type_, other->type_);
    std::swap(datetime_, other->datetime_);
    std::swap(sendername_, other->sendername_);
    label_.Swap(&other->label_);
    std::swap(recipientname_, other->recipientname_);
    std::swap(innermessage_, other->innermessage_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata EagleMessage::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = EagleMessage_descriptor_;
  metadata.reflection = EagleMessage_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace EMS

// @@protoc_insertion_point(global_scope)
