// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: storm.proto

#ifndef PROTOBUF_storm_2eproto__INCLUDED
#define PROTOBUF_storm_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace Storm {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_storm_2eproto();
void protobuf_AssignDesc_storm_2eproto();
void protobuf_ShutdownFile_storm_2eproto();

class DirectionFindingRequest;
class DFStopRequest;
class StartStopRequest;
class ScanRequest;
class ScanStopRequest;
class DirectionAnswerMessage;
class PositionAnswerMessage;
class StatusMessage;

enum DirectionAnswerMessage_MotionType {
  DirectionAnswerMessage_MotionType_STATIONARY = 0,
  DirectionAnswerMessage_MotionType_UNDERWAY = 1,
  DirectionAnswerMessage_MotionType_UNCERTAIN = 2,
  DirectionAnswerMessage_MotionType_LACKOFDATA = 3
};
bool DirectionAnswerMessage_MotionType_IsValid(int value);
const DirectionAnswerMessage_MotionType DirectionAnswerMessage_MotionType_MotionType_MIN = DirectionAnswerMessage_MotionType_STATIONARY;
const DirectionAnswerMessage_MotionType DirectionAnswerMessage_MotionType_MotionType_MAX = DirectionAnswerMessage_MotionType_LACKOFDATA;
const int DirectionAnswerMessage_MotionType_MotionType_ARRAYSIZE = DirectionAnswerMessage_MotionType_MotionType_MAX + 1;

const ::google::protobuf::EnumDescriptor* DirectionAnswerMessage_MotionType_descriptor();
inline const ::std::string& DirectionAnswerMessage_MotionType_Name(DirectionAnswerMessage_MotionType value) {
  return ::google::protobuf::internal::NameOfEnum(
    DirectionAnswerMessage_MotionType_descriptor(), value);
}
inline bool DirectionAnswerMessage_MotionType_Parse(
    const ::std::string& name, DirectionAnswerMessage_MotionType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<DirectionAnswerMessage_MotionType>(
    DirectionAnswerMessage_MotionType_descriptor(), name, value);
}
enum StatusMessage_StatusType {
  StatusMessage_StatusType_NO_ERROR = 0,
  StatusMessage_StatusType_POST_IS_OFF = 1,
  StatusMessage_StatusType_TASK_OUT_OUTSIDE_20_MHZ = 2,
  StatusMessage_StatusType_NO_TASK_FOR_ID = 3
};
bool StatusMessage_StatusType_IsValid(int value);
const StatusMessage_StatusType StatusMessage_StatusType_StatusType_MIN = StatusMessage_StatusType_NO_ERROR;
const StatusMessage_StatusType StatusMessage_StatusType_StatusType_MAX = StatusMessage_StatusType_NO_TASK_FOR_ID;
const int StatusMessage_StatusType_StatusType_ARRAYSIZE = StatusMessage_StatusType_StatusType_MAX + 1;

const ::google::protobuf::EnumDescriptor* StatusMessage_StatusType_descriptor();
inline const ::std::string& StatusMessage_StatusType_Name(StatusMessage_StatusType value) {
  return ::google::protobuf::internal::NameOfEnum(
    StatusMessage_StatusType_descriptor(), value);
}
inline bool StatusMessage_StatusType_Parse(
    const ::std::string& name, StatusMessage_StatusType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<StatusMessage_StatusType>(
    StatusMessage_StatusType_descriptor(), name, value);
}
// ===================================================================

class DirectionFindingRequest : public ::google::protobuf::Message {
 public:
  DirectionFindingRequest();
  virtual ~DirectionFindingRequest();

  DirectionFindingRequest(const DirectionFindingRequest& from);

  inline DirectionFindingRequest& operator=(const DirectionFindingRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DirectionFindingRequest& default_instance();

  void Swap(DirectionFindingRequest* other);

  // implements Message ----------------------------------------------

  DirectionFindingRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DirectionFindingRequest& from);
  void MergeFrom(const DirectionFindingRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // repeated double frequency = 101;
  inline int frequency_size() const;
  inline void clear_frequency();
  static const int kFrequencyFieldNumber = 101;
  inline double frequency(int index) const;
  inline void set_frequency(int index, double value);
  inline void add_frequency(double value);
  inline const ::google::protobuf::RepeatedField< double >&
      frequency() const;
  inline ::google::protobuf::RepeatedField< double >*
      mutable_frequency();

  // required double width = 102;
  inline bool has_width() const;
  inline void clear_width();
  static const int kWidthFieldNumber = 102;
  inline double width() const;
  inline void set_width(double value);

  // optional string description = 103;
  inline bool has_description() const;
  inline void clear_description();
  static const int kDescriptionFieldNumber = 103;
  inline const ::std::string& description() const;
  inline void set_description(const ::std::string& value);
  inline void set_description(const char* value);
  inline void set_description(const char* value, size_t size);
  inline ::std::string* mutable_description();
  inline ::std::string* release_description();
  inline void set_allocated_description(::std::string* description);

  // @@protoc_insertion_point(class_scope:Storm.DirectionFindingRequest)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_width();
  inline void clear_has_width();
  inline void set_has_description();
  inline void clear_has_description();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< double > frequency_;
  double width_;
  ::std::string* description_;
  ::google::protobuf::int32 id_;
  friend void  protobuf_AddDesc_storm_2eproto();
  friend void protobuf_AssignDesc_storm_2eproto();
  friend void protobuf_ShutdownFile_storm_2eproto();

  void InitAsDefaultInstance();
  static DirectionFindingRequest* default_instance_;
};
// -------------------------------------------------------------------

class DFStopRequest : public ::google::protobuf::Message {
 public:
  DFStopRequest();
  virtual ~DFStopRequest();

  DFStopRequest(const DFStopRequest& from);

  inline DFStopRequest& operator=(const DFStopRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DFStopRequest& default_instance();

  void Swap(DFStopRequest* other);

  // implements Message ----------------------------------------------

  DFStopRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DFStopRequest& from);
  void MergeFrom(const DFStopRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Storm.DFStopRequest)
 private:
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 id_;
  friend void  protobuf_AddDesc_storm_2eproto();
  friend void protobuf_AssignDesc_storm_2eproto();
  friend void protobuf_ShutdownFile_storm_2eproto();

  void InitAsDefaultInstance();
  static DFStopRequest* default_instance_;
};
// -------------------------------------------------------------------

class StartStopRequest : public ::google::protobuf::Message {
 public:
  StartStopRequest();
  virtual ~StartStopRequest();

  StartStopRequest(const StartStopRequest& from);

  inline StartStopRequest& operator=(const StartStopRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const StartStopRequest& default_instance();

  void Swap(StartStopRequest* other);

  // implements Message ----------------------------------------------

  StartStopRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const StartStopRequest& from);
  void MergeFrom(const StartStopRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bool active = 1;
  inline bool has_active() const;
  inline void clear_active();
  static const int kActiveFieldNumber = 1;
  inline bool active() const;
  inline void set_active(bool value);

  // @@protoc_insertion_point(class_scope:Storm.StartStopRequest)
 private:
  inline void set_has_active();
  inline void clear_has_active();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  bool active_;
  friend void  protobuf_AddDesc_storm_2eproto();
  friend void protobuf_AssignDesc_storm_2eproto();
  friend void protobuf_ShutdownFile_storm_2eproto();

  void InitAsDefaultInstance();
  static StartStopRequest* default_instance_;
};
// -------------------------------------------------------------------

class ScanRequest : public ::google::protobuf::Message {
 public:
  ScanRequest();
  virtual ~ScanRequest();

  ScanRequest(const ScanRequest& from);

  inline ScanRequest& operator=(const ScanRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ScanRequest& default_instance();

  void Swap(ScanRequest* other);

  // implements Message ----------------------------------------------

  ScanRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ScanRequest& from);
  void MergeFrom(const ScanRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // required double frequency = 101;
  inline bool has_frequency() const;
  inline void clear_frequency();
  static const int kFrequencyFieldNumber = 101;
  inline double frequency() const;
  inline void set_frequency(double value);

  // required double width = 102;
  inline bool has_width() const;
  inline void clear_width();
  static const int kWidthFieldNumber = 102;
  inline double width() const;
  inline void set_width(double value);

  // @@protoc_insertion_point(class_scope:Storm.ScanRequest)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_frequency();
  inline void clear_has_frequency();
  inline void set_has_width();
  inline void clear_has_width();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  double frequency_;
  double width_;
  ::google::protobuf::int32 id_;
  friend void  protobuf_AddDesc_storm_2eproto();
  friend void protobuf_AssignDesc_storm_2eproto();
  friend void protobuf_ShutdownFile_storm_2eproto();

  void InitAsDefaultInstance();
  static ScanRequest* default_instance_;
};
// -------------------------------------------------------------------

class ScanStopRequest : public ::google::protobuf::Message {
 public:
  ScanStopRequest();
  virtual ~ScanStopRequest();

  ScanStopRequest(const ScanStopRequest& from);

  inline ScanStopRequest& operator=(const ScanStopRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ScanStopRequest& default_instance();

  void Swap(ScanStopRequest* other);

  // implements Message ----------------------------------------------

  ScanStopRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ScanStopRequest& from);
  void MergeFrom(const ScanStopRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Storm.ScanStopRequest)
 private:
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 id_;
  friend void  protobuf_AddDesc_storm_2eproto();
  friend void protobuf_AssignDesc_storm_2eproto();
  friend void protobuf_ShutdownFile_storm_2eproto();

  void InitAsDefaultInstance();
  static ScanStopRequest* default_instance_;
};
// -------------------------------------------------------------------

class DirectionAnswerMessage : public ::google::protobuf::Message {
 public:
  DirectionAnswerMessage();
  virtual ~DirectionAnswerMessage();

  DirectionAnswerMessage(const DirectionAnswerMessage& from);

  inline DirectionAnswerMessage& operator=(const DirectionAnswerMessage& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DirectionAnswerMessage& default_instance();

  void Swap(DirectionAnswerMessage* other);

  // implements Message ----------------------------------------------

  DirectionAnswerMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DirectionAnswerMessage& from);
  void MergeFrom(const DirectionAnswerMessage& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef DirectionAnswerMessage_MotionType MotionType;
  static const MotionType STATIONARY = DirectionAnswerMessage_MotionType_STATIONARY;
  static const MotionType UNDERWAY = DirectionAnswerMessage_MotionType_UNDERWAY;
  static const MotionType UNCERTAIN = DirectionAnswerMessage_MotionType_UNCERTAIN;
  static const MotionType LACKOFDATA = DirectionAnswerMessage_MotionType_LACKOFDATA;
  static inline bool MotionType_IsValid(int value) {
    return DirectionAnswerMessage_MotionType_IsValid(value);
  }
  static const MotionType MotionType_MIN =
    DirectionAnswerMessage_MotionType_MotionType_MIN;
  static const MotionType MotionType_MAX =
    DirectionAnswerMessage_MotionType_MotionType_MAX;
  static const int MotionType_ARRAYSIZE =
    DirectionAnswerMessage_MotionType_MotionType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MotionType_descriptor() {
    return DirectionAnswerMessage_MotionType_descriptor();
  }
  static inline const ::std::string& MotionType_Name(MotionType value) {
    return DirectionAnswerMessage_MotionType_Name(value);
  }
  static inline bool MotionType_Parse(const ::std::string& name,
      MotionType* value) {
    return DirectionAnswerMessage_MotionType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required int32 requestId = 1;
  inline bool has_requestid() const;
  inline void clear_requestid();
  static const int kRequestIdFieldNumber = 1;
  inline ::google::protobuf::int32 requestid() const;
  inline void set_requestid(::google::protobuf::int32 value);

  // required int32 sourceId = 2;
  inline bool has_sourceid() const;
  inline void clear_sourceid();
  static const int kSourceIdFieldNumber = 2;
  inline ::google::protobuf::int32 sourceid() const;
  inline void set_sourceid(::google::protobuf::int32 value);

  // required int64 dateTime = 3;
  inline bool has_datetime() const;
  inline void clear_datetime();
  static const int kDateTimeFieldNumber = 3;
  inline ::google::protobuf::int64 datetime() const;
  inline void set_datetime(::google::protobuf::int64 value);

  // required string post = 101;
  inline bool has_post() const;
  inline void clear_post();
  static const int kPostFieldNumber = 101;
  inline const ::std::string& post() const;
  inline void set_post(const ::std::string& value);
  inline void set_post(const char* value);
  inline void set_post(const char* value, size_t size);
  inline ::std::string* mutable_post();
  inline ::std::string* release_post();
  inline void set_allocated_post(::std::string* post);

  // optional double postLatitude = 102;
  inline bool has_postlatitude() const;
  inline void clear_postlatitude();
  static const int kPostLatitudeFieldNumber = 102;
  inline double postlatitude() const;
  inline void set_postlatitude(double value);

  // optional double postLongitude = 103;
  inline bool has_postlongitude() const;
  inline void clear_postlongitude();
  static const int kPostLongitudeFieldNumber = 103;
  inline double postlongitude() const;
  inline void set_postlongitude(double value);

  // optional double postHeight = 104;
  inline bool has_postheight() const;
  inline void clear_postheight();
  static const int kPostHeightFieldNumber = 104;
  inline double postheight() const;
  inline void set_postheight(double value);

  // required double frequency = 201;
  inline bool has_frequency() const;
  inline void clear_frequency();
  static const int kFrequencyFieldNumber = 201;
  inline double frequency() const;
  inline void set_frequency(double value);

  // required double widht = 202;
  inline bool has_widht() const;
  inline void clear_widht();
  static const int kWidhtFieldNumber = 202;
  inline double widht() const;
  inline void set_widht(double value);

  // required double direction = 301;
  inline bool has_direction() const;
  inline void clear_direction();
  static const int kDirectionFieldNumber = 301;
  inline double direction() const;
  inline void set_direction(double value);

  // required double angle = 302;
  inline bool has_angle() const;
  inline void clear_angle();
  static const int kAngleFieldNumber = 302;
  inline double angle() const;
  inline void set_angle(double value);

  // required double level = 303;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 303;
  inline double level() const;
  inline void set_level(double value);

  // required double quality = 304;
  inline bool has_quality() const;
  inline void clear_quality();
  static const int kQualityFieldNumber = 304;
  inline double quality() const;
  inline void set_quality(double value);

  // optional .Storm.DirectionAnswerMessage.MotionType motionType = 401;
  inline bool has_motiontype() const;
  inline void clear_motiontype();
  static const int kMotionTypeFieldNumber = 401;
  inline ::Storm::DirectionAnswerMessage_MotionType motiontype() const;
  inline void set_motiontype(::Storm::DirectionAnswerMessage_MotionType value);

  // optional double motionConfidence = 402;
  inline bool has_motionconfidence() const;
  inline void clear_motionconfidence();
  static const int kMotionConfidenceFieldNumber = 402;
  inline double motionconfidence() const;
  inline void set_motionconfidence(double value);

  // @@protoc_insertion_point(class_scope:Storm.DirectionAnswerMessage)
 private:
  inline void set_has_requestid();
  inline void clear_has_requestid();
  inline void set_has_sourceid();
  inline void clear_has_sourceid();
  inline void set_has_datetime();
  inline void clear_has_datetime();
  inline void set_has_post();
  inline void clear_has_post();
  inline void set_has_postlatitude();
  inline void clear_has_postlatitude();
  inline void set_has_postlongitude();
  inline void clear_has_postlongitude();
  inline void set_has_postheight();
  inline void clear_has_postheight();
  inline void set_has_frequency();
  inline void clear_has_frequency();
  inline void set_has_widht();
  inline void clear_has_widht();
  inline void set_has_direction();
  inline void clear_has_direction();
  inline void set_has_angle();
  inline void clear_has_angle();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_quality();
  inline void clear_has_quality();
  inline void set_has_motiontype();
  inline void clear_has_motiontype();
  inline void set_has_motionconfidence();
  inline void clear_has_motionconfidence();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 requestid_;
  ::google::protobuf::int32 sourceid_;
  ::google::protobuf::int64 datetime_;
  ::std::string* post_;
  double postlatitude_;
  double postlongitude_;
  double postheight_;
  double frequency_;
  double widht_;
  double direction_;
  double angle_;
  double level_;
  double quality_;
  double motionconfidence_;
  int motiontype_;
  friend void  protobuf_AddDesc_storm_2eproto();
  friend void protobuf_AssignDesc_storm_2eproto();
  friend void protobuf_ShutdownFile_storm_2eproto();

  void InitAsDefaultInstance();
  static DirectionAnswerMessage* default_instance_;
};
// -------------------------------------------------------------------

class PositionAnswerMessage : public ::google::protobuf::Message {
 public:
  PositionAnswerMessage();
  virtual ~PositionAnswerMessage();

  PositionAnswerMessage(const PositionAnswerMessage& from);

  inline PositionAnswerMessage& operator=(const PositionAnswerMessage& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PositionAnswerMessage& default_instance();

  void Swap(PositionAnswerMessage* other);

  // implements Message ----------------------------------------------

  PositionAnswerMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PositionAnswerMessage& from);
  void MergeFrom(const PositionAnswerMessage& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 requestId = 1;
  inline bool has_requestid() const;
  inline void clear_requestid();
  static const int kRequestIdFieldNumber = 1;
  inline ::google::protobuf::int32 requestid() const;
  inline void set_requestid(::google::protobuf::int32 value);

  // required int32 sourceId = 2;
  inline bool has_sourceid() const;
  inline void clear_sourceid();
  static const int kSourceIdFieldNumber = 2;
  inline ::google::protobuf::int32 sourceid() const;
  inline void set_sourceid(::google::protobuf::int32 value);

  // required int64 dateTime = 3;
  inline bool has_datetime() const;
  inline void clear_datetime();
  static const int kDateTimeFieldNumber = 3;
  inline ::google::protobuf::int64 datetime() const;
  inline void set_datetime(::google::protobuf::int64 value);

  // required double longitude = 10;
  inline bool has_longitude() const;
  inline void clear_longitude();
  static const int kLongitudeFieldNumber = 10;
  inline double longitude() const;
  inline void set_longitude(double value);

  // required double latitude = 102;
  inline bool has_latitude() const;
  inline void clear_latitude();
  static const int kLatitudeFieldNumber = 102;
  inline double latitude() const;
  inline void set_latitude(double value);

  // required double quality = 103;
  inline bool has_quality() const;
  inline void clear_quality();
  static const int kQualityFieldNumber = 103;
  inline double quality() const;
  inline void set_quality(double value);

  // @@protoc_insertion_point(class_scope:Storm.PositionAnswerMessage)
 private:
  inline void set_has_requestid();
  inline void clear_has_requestid();
  inline void set_has_sourceid();
  inline void clear_has_sourceid();
  inline void set_has_datetime();
  inline void clear_has_datetime();
  inline void set_has_longitude();
  inline void clear_has_longitude();
  inline void set_has_latitude();
  inline void clear_has_latitude();
  inline void set_has_quality();
  inline void clear_has_quality();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 requestid_;
  ::google::protobuf::int32 sourceid_;
  ::google::protobuf::int64 datetime_;
  double longitude_;
  double latitude_;
  double quality_;
  friend void  protobuf_AddDesc_storm_2eproto();
  friend void protobuf_AssignDesc_storm_2eproto();
  friend void protobuf_ShutdownFile_storm_2eproto();

  void InitAsDefaultInstance();
  static PositionAnswerMessage* default_instance_;
};
// -------------------------------------------------------------------

class StatusMessage : public ::google::protobuf::Message {
 public:
  StatusMessage();
  virtual ~StatusMessage();

  StatusMessage(const StatusMessage& from);

  inline StatusMessage& operator=(const StatusMessage& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const StatusMessage& default_instance();

  void Swap(StatusMessage* other);

  // implements Message ----------------------------------------------

  StatusMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const StatusMessage& from);
  void MergeFrom(const StatusMessage& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef StatusMessage_StatusType StatusType;
  static const StatusType NO_ERROR = StatusMessage_StatusType_NO_ERROR;
  static const StatusType POST_IS_OFF = StatusMessage_StatusType_POST_IS_OFF;
  static const StatusType TASK_OUT_OUTSIDE_20_MHZ = StatusMessage_StatusType_TASK_OUT_OUTSIDE_20_MHZ;
  static const StatusType NO_TASK_FOR_ID = StatusMessage_StatusType_NO_TASK_FOR_ID;
  static inline bool StatusType_IsValid(int value) {
    return StatusMessage_StatusType_IsValid(value);
  }
  static const StatusType StatusType_MIN =
    StatusMessage_StatusType_StatusType_MIN;
  static const StatusType StatusType_MAX =
    StatusMessage_StatusType_StatusType_MAX;
  static const int StatusType_ARRAYSIZE =
    StatusMessage_StatusType_StatusType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  StatusType_descriptor() {
    return StatusMessage_StatusType_descriptor();
  }
  static inline const ::std::string& StatusType_Name(StatusType value) {
    return StatusMessage_StatusType_Name(value);
  }
  static inline bool StatusType_Parse(const ::std::string& name,
      StatusType* value) {
    return StatusMessage_StatusType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required .Storm.StatusMessage.StatusType status = 1;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 1;
  inline ::Storm::StatusMessage_StatusType status() const;
  inline void set_status(::Storm::StatusMessage_StatusType value);

  // required string description = 2;
  inline bool has_description() const;
  inline void clear_description();
  static const int kDescriptionFieldNumber = 2;
  inline const ::std::string& description() const;
  inline void set_description(const ::std::string& value);
  inline void set_description(const char* value);
  inline void set_description(const char* value, size_t size);
  inline ::std::string* mutable_description();
  inline ::std::string* release_description();
  inline void set_allocated_description(::std::string* description);

  // optional int32 requestID = 101;
  inline bool has_requestid() const;
  inline void clear_requestid();
  static const int kRequestIDFieldNumber = 101;
  inline ::google::protobuf::int32 requestid() const;
  inline void set_requestid(::google::protobuf::int32 value);

  // optional string postID = 102;
  inline bool has_postid() const;
  inline void clear_postid();
  static const int kPostIDFieldNumber = 102;
  inline const ::std::string& postid() const;
  inline void set_postid(const ::std::string& value);
  inline void set_postid(const char* value);
  inline void set_postid(const char* value, size_t size);
  inline ::std::string* mutable_postid();
  inline ::std::string* release_postid();
  inline void set_allocated_postid(::std::string* postid);

  // @@protoc_insertion_point(class_scope:Storm.StatusMessage)
 private:
  inline void set_has_status();
  inline void clear_has_status();
  inline void set_has_description();
  inline void clear_has_description();
  inline void set_has_requestid();
  inline void clear_has_requestid();
  inline void set_has_postid();
  inline void clear_has_postid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* description_;
  int status_;
  ::google::protobuf::int32 requestid_;
  ::std::string* postid_;
  friend void  protobuf_AddDesc_storm_2eproto();
  friend void protobuf_AssignDesc_storm_2eproto();
  friend void protobuf_ShutdownFile_storm_2eproto();

  void InitAsDefaultInstance();
  static StatusMessage* default_instance_;
};
// ===================================================================


// ===================================================================

// DirectionFindingRequest

// required int32 id = 1;
inline bool DirectionFindingRequest::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DirectionFindingRequest::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DirectionFindingRequest::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DirectionFindingRequest::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 DirectionFindingRequest::id() const {
  // @@protoc_insertion_point(field_get:Storm.DirectionFindingRequest.id)
  return id_;
}
inline void DirectionFindingRequest::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:Storm.DirectionFindingRequest.id)
}

// repeated double frequency = 101;
inline int DirectionFindingRequest::frequency_size() const {
  return frequency_.size();
}
inline void DirectionFindingRequest::clear_frequency() {
  frequency_.Clear();
}
inline double DirectionFindingRequest::frequency(int index) const {
  // @@protoc_insertion_point(field_get:Storm.DirectionFindingRequest.frequency)
  return frequency_.Get(index);
}
inline void DirectionFindingRequest::set_frequency(int index, double value) {
  frequency_.Set(index, value);
  // @@protoc_insertion_point(field_set:Storm.DirectionFindingRequest.frequency)
}
inline void DirectionFindingRequest::add_frequency(double value) {
  frequency_.Add(value);
  // @@protoc_insertion_point(field_add:Storm.DirectionFindingRequest.frequency)
}
inline const ::google::protobuf::RepeatedField< double >&
DirectionFindingRequest::frequency() const {
  // @@protoc_insertion_point(field_list:Storm.DirectionFindingRequest.frequency)
  return frequency_;
}
inline ::google::protobuf::RepeatedField< double >*
DirectionFindingRequest::mutable_frequency() {
  // @@protoc_insertion_point(field_mutable_list:Storm.DirectionFindingRequest.frequency)
  return &frequency_;
}

// required double width = 102;
inline bool DirectionFindingRequest::has_width() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DirectionFindingRequest::set_has_width() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DirectionFindingRequest::clear_has_width() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DirectionFindingRequest::clear_width() {
  width_ = 0;
  clear_has_width();
}
inline double DirectionFindingRequest::width() const {
  // @@protoc_insertion_point(field_get:Storm.DirectionFindingRequest.width)
  return width_;
}
inline void DirectionFindingRequest::set_width(double value) {
  set_has_width();
  width_ = value;
  // @@protoc_insertion_point(field_set:Storm.DirectionFindingRequest.width)
}

// optional string description = 103;
inline bool DirectionFindingRequest::has_description() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DirectionFindingRequest::set_has_description() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DirectionFindingRequest::clear_has_description() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DirectionFindingRequest::clear_description() {
  if (description_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    description_->clear();
  }
  clear_has_description();
}
inline const ::std::string& DirectionFindingRequest::description() const {
  // @@protoc_insertion_point(field_get:Storm.DirectionFindingRequest.description)
  return *description_;
}
inline void DirectionFindingRequest::set_description(const ::std::string& value) {
  set_has_description();
  if (description_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    description_ = new ::std::string;
  }
  description_->assign(value);
  // @@protoc_insertion_point(field_set:Storm.DirectionFindingRequest.description)
}
inline void DirectionFindingRequest::set_description(const char* value) {
  set_has_description();
  if (description_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    description_ = new ::std::string;
  }
  description_->assign(value);
  // @@protoc_insertion_point(field_set_char:Storm.DirectionFindingRequest.description)
}
inline void DirectionFindingRequest::set_description(const char* value, size_t size) {
  set_has_description();
  if (description_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    description_ = new ::std::string;
  }
  description_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Storm.DirectionFindingRequest.description)
}
inline ::std::string* DirectionFindingRequest::mutable_description() {
  set_has_description();
  if (description_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    description_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Storm.DirectionFindingRequest.description)
  return description_;
}
inline ::std::string* DirectionFindingRequest::release_description() {
  clear_has_description();
  if (description_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = description_;
    description_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void DirectionFindingRequest::set_allocated_description(::std::string* description) {
  if (description_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete description_;
  }
  if (description) {
    set_has_description();
    description_ = description;
  } else {
    clear_has_description();
    description_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Storm.DirectionFindingRequest.description)
}

// -------------------------------------------------------------------

// DFStopRequest

// required int32 id = 1;
inline bool DFStopRequest::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DFStopRequest::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DFStopRequest::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DFStopRequest::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 DFStopRequest::id() const {
  // @@protoc_insertion_point(field_get:Storm.DFStopRequest.id)
  return id_;
}
inline void DFStopRequest::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:Storm.DFStopRequest.id)
}

// -------------------------------------------------------------------

// StartStopRequest

// required bool active = 1;
inline bool StartStopRequest::has_active() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StartStopRequest::set_has_active() {
  _has_bits_[0] |= 0x00000001u;
}
inline void StartStopRequest::clear_has_active() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void StartStopRequest::clear_active() {
  active_ = false;
  clear_has_active();
}
inline bool StartStopRequest::active() const {
  // @@protoc_insertion_point(field_get:Storm.StartStopRequest.active)
  return active_;
}
inline void StartStopRequest::set_active(bool value) {
  set_has_active();
  active_ = value;
  // @@protoc_insertion_point(field_set:Storm.StartStopRequest.active)
}

// -------------------------------------------------------------------

// ScanRequest

// required int32 id = 1;
inline bool ScanRequest::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ScanRequest::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ScanRequest::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ScanRequest::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 ScanRequest::id() const {
  // @@protoc_insertion_point(field_get:Storm.ScanRequest.id)
  return id_;
}
inline void ScanRequest::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:Storm.ScanRequest.id)
}

// required double frequency = 101;
inline bool ScanRequest::has_frequency() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ScanRequest::set_has_frequency() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ScanRequest::clear_has_frequency() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ScanRequest::clear_frequency() {
  frequency_ = 0;
  clear_has_frequency();
}
inline double ScanRequest::frequency() const {
  // @@protoc_insertion_point(field_get:Storm.ScanRequest.frequency)
  return frequency_;
}
inline void ScanRequest::set_frequency(double value) {
  set_has_frequency();
  frequency_ = value;
  // @@protoc_insertion_point(field_set:Storm.ScanRequest.frequency)
}

// required double width = 102;
inline bool ScanRequest::has_width() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ScanRequest::set_has_width() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ScanRequest::clear_has_width() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ScanRequest::clear_width() {
  width_ = 0;
  clear_has_width();
}
inline double ScanRequest::width() const {
  // @@protoc_insertion_point(field_get:Storm.ScanRequest.width)
  return width_;
}
inline void ScanRequest::set_width(double value) {
  set_has_width();
  width_ = value;
  // @@protoc_insertion_point(field_set:Storm.ScanRequest.width)
}

// -------------------------------------------------------------------

// ScanStopRequest

// required int32 id = 1;
inline bool ScanStopRequest::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ScanStopRequest::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ScanStopRequest::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ScanStopRequest::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 ScanStopRequest::id() const {
  // @@protoc_insertion_point(field_get:Storm.ScanStopRequest.id)
  return id_;
}
inline void ScanStopRequest::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:Storm.ScanStopRequest.id)
}

// -------------------------------------------------------------------

// DirectionAnswerMessage

// required int32 requestId = 1;
inline bool DirectionAnswerMessage::has_requestid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DirectionAnswerMessage::set_has_requestid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DirectionAnswerMessage::clear_has_requestid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DirectionAnswerMessage::clear_requestid() {
  requestid_ = 0;
  clear_has_requestid();
}
inline ::google::protobuf::int32 DirectionAnswerMessage::requestid() const {
  // @@protoc_insertion_point(field_get:Storm.DirectionAnswerMessage.requestId)
  return requestid_;
}
inline void DirectionAnswerMessage::set_requestid(::google::protobuf::int32 value) {
  set_has_requestid();
  requestid_ = value;
  // @@protoc_insertion_point(field_set:Storm.DirectionAnswerMessage.requestId)
}

// required int32 sourceId = 2;
inline bool DirectionAnswerMessage::has_sourceid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DirectionAnswerMessage::set_has_sourceid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DirectionAnswerMessage::clear_has_sourceid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DirectionAnswerMessage::clear_sourceid() {
  sourceid_ = 0;
  clear_has_sourceid();
}
inline ::google::protobuf::int32 DirectionAnswerMessage::sourceid() const {
  // @@protoc_insertion_point(field_get:Storm.DirectionAnswerMessage.sourceId)
  return sourceid_;
}
inline void DirectionAnswerMessage::set_sourceid(::google::protobuf::int32 value) {
  set_has_sourceid();
  sourceid_ = value;
  // @@protoc_insertion_point(field_set:Storm.DirectionAnswerMessage.sourceId)
}

// required int64 dateTime = 3;
inline bool DirectionAnswerMessage::has_datetime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DirectionAnswerMessage::set_has_datetime() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DirectionAnswerMessage::clear_has_datetime() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DirectionAnswerMessage::clear_datetime() {
  datetime_ = GOOGLE_LONGLONG(0);
  clear_has_datetime();
}
inline ::google::protobuf::int64 DirectionAnswerMessage::datetime() const {
  // @@protoc_insertion_point(field_get:Storm.DirectionAnswerMessage.dateTime)
  return datetime_;
}
inline void DirectionAnswerMessage::set_datetime(::google::protobuf::int64 value) {
  set_has_datetime();
  datetime_ = value;
  // @@protoc_insertion_point(field_set:Storm.DirectionAnswerMessage.dateTime)
}

// required string post = 101;
inline bool DirectionAnswerMessage::has_post() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DirectionAnswerMessage::set_has_post() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DirectionAnswerMessage::clear_has_post() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DirectionAnswerMessage::clear_post() {
  if (post_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    post_->clear();
  }
  clear_has_post();
}
inline const ::std::string& DirectionAnswerMessage::post() const {
  // @@protoc_insertion_point(field_get:Storm.DirectionAnswerMessage.post)
  return *post_;
}
inline void DirectionAnswerMessage::set_post(const ::std::string& value) {
  set_has_post();
  if (post_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    post_ = new ::std::string;
  }
  post_->assign(value);
  // @@protoc_insertion_point(field_set:Storm.DirectionAnswerMessage.post)
}
inline void DirectionAnswerMessage::set_post(const char* value) {
  set_has_post();
  if (post_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    post_ = new ::std::string;
  }
  post_->assign(value);
  // @@protoc_insertion_point(field_set_char:Storm.DirectionAnswerMessage.post)
}
inline void DirectionAnswerMessage::set_post(const char* value, size_t size) {
  set_has_post();
  if (post_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    post_ = new ::std::string;
  }
  post_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Storm.DirectionAnswerMessage.post)
}
inline ::std::string* DirectionAnswerMessage::mutable_post() {
  set_has_post();
  if (post_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    post_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Storm.DirectionAnswerMessage.post)
  return post_;
}
inline ::std::string* DirectionAnswerMessage::release_post() {
  clear_has_post();
  if (post_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = post_;
    post_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void DirectionAnswerMessage::set_allocated_post(::std::string* post) {
  if (post_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete post_;
  }
  if (post) {
    set_has_post();
    post_ = post;
  } else {
    clear_has_post();
    post_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Storm.DirectionAnswerMessage.post)
}

// optional double postLatitude = 102;
inline bool DirectionAnswerMessage::has_postlatitude() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void DirectionAnswerMessage::set_has_postlatitude() {
  _has_bits_[0] |= 0x00000010u;
}
inline void DirectionAnswerMessage::clear_has_postlatitude() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void DirectionAnswerMessage::clear_postlatitude() {
  postlatitude_ = 0;
  clear_has_postlatitude();
}
inline double DirectionAnswerMessage::postlatitude() const {
  // @@protoc_insertion_point(field_get:Storm.DirectionAnswerMessage.postLatitude)
  return postlatitude_;
}
inline void DirectionAnswerMessage::set_postlatitude(double value) {
  set_has_postlatitude();
  postlatitude_ = value;
  // @@protoc_insertion_point(field_set:Storm.DirectionAnswerMessage.postLatitude)
}

// optional double postLongitude = 103;
inline bool DirectionAnswerMessage::has_postlongitude() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void DirectionAnswerMessage::set_has_postlongitude() {
  _has_bits_[0] |= 0x00000020u;
}
inline void DirectionAnswerMessage::clear_has_postlongitude() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void DirectionAnswerMessage::clear_postlongitude() {
  postlongitude_ = 0;
  clear_has_postlongitude();
}
inline double DirectionAnswerMessage::postlongitude() const {
  // @@protoc_insertion_point(field_get:Storm.DirectionAnswerMessage.postLongitude)
  return postlongitude_;
}
inline void DirectionAnswerMessage::set_postlongitude(double value) {
  set_has_postlongitude();
  postlongitude_ = value;
  // @@protoc_insertion_point(field_set:Storm.DirectionAnswerMessage.postLongitude)
}

// optional double postHeight = 104;
inline bool DirectionAnswerMessage::has_postheight() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void DirectionAnswerMessage::set_has_postheight() {
  _has_bits_[0] |= 0x00000040u;
}
inline void DirectionAnswerMessage::clear_has_postheight() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void DirectionAnswerMessage::clear_postheight() {
  postheight_ = 0;
  clear_has_postheight();
}
inline double DirectionAnswerMessage::postheight() const {
  // @@protoc_insertion_point(field_get:Storm.DirectionAnswerMessage.postHeight)
  return postheight_;
}
inline void DirectionAnswerMessage::set_postheight(double value) {
  set_has_postheight();
  postheight_ = value;
  // @@protoc_insertion_point(field_set:Storm.DirectionAnswerMessage.postHeight)
}

// required double frequency = 201;
inline bool DirectionAnswerMessage::has_frequency() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void DirectionAnswerMessage::set_has_frequency() {
  _has_bits_[0] |= 0x00000080u;
}
inline void DirectionAnswerMessage::clear_has_frequency() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void DirectionAnswerMessage::clear_frequency() {
  frequency_ = 0;
  clear_has_frequency();
}
inline double DirectionAnswerMessage::frequency() const {
  // @@protoc_insertion_point(field_get:Storm.DirectionAnswerMessage.frequency)
  return frequency_;
}
inline void DirectionAnswerMessage::set_frequency(double value) {
  set_has_frequency();
  frequency_ = value;
  // @@protoc_insertion_point(field_set:Storm.DirectionAnswerMessage.frequency)
}

// required double widht = 202;
inline bool DirectionAnswerMessage::has_widht() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void DirectionAnswerMessage::set_has_widht() {
  _has_bits_[0] |= 0x00000100u;
}
inline void DirectionAnswerMessage::clear_has_widht() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void DirectionAnswerMessage::clear_widht() {
  widht_ = 0;
  clear_has_widht();
}
inline double DirectionAnswerMessage::widht() const {
  // @@protoc_insertion_point(field_get:Storm.DirectionAnswerMessage.widht)
  return widht_;
}
inline void DirectionAnswerMessage::set_widht(double value) {
  set_has_widht();
  widht_ = value;
  // @@protoc_insertion_point(field_set:Storm.DirectionAnswerMessage.widht)
}

// required double direction = 301;
inline bool DirectionAnswerMessage::has_direction() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void DirectionAnswerMessage::set_has_direction() {
  _has_bits_[0] |= 0x00000200u;
}
inline void DirectionAnswerMessage::clear_has_direction() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void DirectionAnswerMessage::clear_direction() {
  direction_ = 0;
  clear_has_direction();
}
inline double DirectionAnswerMessage::direction() const {
  // @@protoc_insertion_point(field_get:Storm.DirectionAnswerMessage.direction)
  return direction_;
}
inline void DirectionAnswerMessage::set_direction(double value) {
  set_has_direction();
  direction_ = value;
  // @@protoc_insertion_point(field_set:Storm.DirectionAnswerMessage.direction)
}

// required double angle = 302;
inline bool DirectionAnswerMessage::has_angle() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void DirectionAnswerMessage::set_has_angle() {
  _has_bits_[0] |= 0x00000400u;
}
inline void DirectionAnswerMessage::clear_has_angle() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void DirectionAnswerMessage::clear_angle() {
  angle_ = 0;
  clear_has_angle();
}
inline double DirectionAnswerMessage::angle() const {
  // @@protoc_insertion_point(field_get:Storm.DirectionAnswerMessage.angle)
  return angle_;
}
inline void DirectionAnswerMessage::set_angle(double value) {
  set_has_angle();
  angle_ = value;
  // @@protoc_insertion_point(field_set:Storm.DirectionAnswerMessage.angle)
}

// required double level = 303;
inline bool DirectionAnswerMessage::has_level() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void DirectionAnswerMessage::set_has_level() {
  _has_bits_[0] |= 0x00000800u;
}
inline void DirectionAnswerMessage::clear_has_level() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void DirectionAnswerMessage::clear_level() {
  level_ = 0;
  clear_has_level();
}
inline double DirectionAnswerMessage::level() const {
  // @@protoc_insertion_point(field_get:Storm.DirectionAnswerMessage.level)
  return level_;
}
inline void DirectionAnswerMessage::set_level(double value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:Storm.DirectionAnswerMessage.level)
}

// required double quality = 304;
inline bool DirectionAnswerMessage::has_quality() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void DirectionAnswerMessage::set_has_quality() {
  _has_bits_[0] |= 0x00001000u;
}
inline void DirectionAnswerMessage::clear_has_quality() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void DirectionAnswerMessage::clear_quality() {
  quality_ = 0;
  clear_has_quality();
}
inline double DirectionAnswerMessage::quality() const {
  // @@protoc_insertion_point(field_get:Storm.DirectionAnswerMessage.quality)
  return quality_;
}
inline void DirectionAnswerMessage::set_quality(double value) {
  set_has_quality();
  quality_ = value;
  // @@protoc_insertion_point(field_set:Storm.DirectionAnswerMessage.quality)
}

// optional .Storm.DirectionAnswerMessage.MotionType motionType = 401;
inline bool DirectionAnswerMessage::has_motiontype() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void DirectionAnswerMessage::set_has_motiontype() {
  _has_bits_[0] |= 0x00002000u;
}
inline void DirectionAnswerMessage::clear_has_motiontype() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void DirectionAnswerMessage::clear_motiontype() {
  motiontype_ = 0;
  clear_has_motiontype();
}
inline ::Storm::DirectionAnswerMessage_MotionType DirectionAnswerMessage::motiontype() const {
  // @@protoc_insertion_point(field_get:Storm.DirectionAnswerMessage.motionType)
  return static_cast< ::Storm::DirectionAnswerMessage_MotionType >(motiontype_);
}
inline void DirectionAnswerMessage::set_motiontype(::Storm::DirectionAnswerMessage_MotionType value) {
  assert(::Storm::DirectionAnswerMessage_MotionType_IsValid(value));
  set_has_motiontype();
  motiontype_ = value;
  // @@protoc_insertion_point(field_set:Storm.DirectionAnswerMessage.motionType)
}

// optional double motionConfidence = 402;
inline bool DirectionAnswerMessage::has_motionconfidence() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void DirectionAnswerMessage::set_has_motionconfidence() {
  _has_bits_[0] |= 0x00004000u;
}
inline void DirectionAnswerMessage::clear_has_motionconfidence() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void DirectionAnswerMessage::clear_motionconfidence() {
  motionconfidence_ = 0;
  clear_has_motionconfidence();
}
inline double DirectionAnswerMessage::motionconfidence() const {
  // @@protoc_insertion_point(field_get:Storm.DirectionAnswerMessage.motionConfidence)
  return motionconfidence_;
}
inline void DirectionAnswerMessage::set_motionconfidence(double value) {
  set_has_motionconfidence();
  motionconfidence_ = value;
  // @@protoc_insertion_point(field_set:Storm.DirectionAnswerMessage.motionConfidence)
}

// -------------------------------------------------------------------

// PositionAnswerMessage

// required int32 requestId = 1;
inline bool PositionAnswerMessage::has_requestid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PositionAnswerMessage::set_has_requestid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PositionAnswerMessage::clear_has_requestid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PositionAnswerMessage::clear_requestid() {
  requestid_ = 0;
  clear_has_requestid();
}
inline ::google::protobuf::int32 PositionAnswerMessage::requestid() const {
  // @@protoc_insertion_point(field_get:Storm.PositionAnswerMessage.requestId)
  return requestid_;
}
inline void PositionAnswerMessage::set_requestid(::google::protobuf::int32 value) {
  set_has_requestid();
  requestid_ = value;
  // @@protoc_insertion_point(field_set:Storm.PositionAnswerMessage.requestId)
}

// required int32 sourceId = 2;
inline bool PositionAnswerMessage::has_sourceid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PositionAnswerMessage::set_has_sourceid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PositionAnswerMessage::clear_has_sourceid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PositionAnswerMessage::clear_sourceid() {
  sourceid_ = 0;
  clear_has_sourceid();
}
inline ::google::protobuf::int32 PositionAnswerMessage::sourceid() const {
  // @@protoc_insertion_point(field_get:Storm.PositionAnswerMessage.sourceId)
  return sourceid_;
}
inline void PositionAnswerMessage::set_sourceid(::google::protobuf::int32 value) {
  set_has_sourceid();
  sourceid_ = value;
  // @@protoc_insertion_point(field_set:Storm.PositionAnswerMessage.sourceId)
}

// required int64 dateTime = 3;
inline bool PositionAnswerMessage::has_datetime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PositionAnswerMessage::set_has_datetime() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PositionAnswerMessage::clear_has_datetime() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PositionAnswerMessage::clear_datetime() {
  datetime_ = GOOGLE_LONGLONG(0);
  clear_has_datetime();
}
inline ::google::protobuf::int64 PositionAnswerMessage::datetime() const {
  // @@protoc_insertion_point(field_get:Storm.PositionAnswerMessage.dateTime)
  return datetime_;
}
inline void PositionAnswerMessage::set_datetime(::google::protobuf::int64 value) {
  set_has_datetime();
  datetime_ = value;
  // @@protoc_insertion_point(field_set:Storm.PositionAnswerMessage.dateTime)
}

// required double longitude = 10;
inline bool PositionAnswerMessage::has_longitude() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PositionAnswerMessage::set_has_longitude() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PositionAnswerMessage::clear_has_longitude() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PositionAnswerMessage::clear_longitude() {
  longitude_ = 0;
  clear_has_longitude();
}
inline double PositionAnswerMessage::longitude() const {
  // @@protoc_insertion_point(field_get:Storm.PositionAnswerMessage.longitude)
  return longitude_;
}
inline void PositionAnswerMessage::set_longitude(double value) {
  set_has_longitude();
  longitude_ = value;
  // @@protoc_insertion_point(field_set:Storm.PositionAnswerMessage.longitude)
}

// required double latitude = 102;
inline bool PositionAnswerMessage::has_latitude() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PositionAnswerMessage::set_has_latitude() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PositionAnswerMessage::clear_has_latitude() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PositionAnswerMessage::clear_latitude() {
  latitude_ = 0;
  clear_has_latitude();
}
inline double PositionAnswerMessage::latitude() const {
  // @@protoc_insertion_point(field_get:Storm.PositionAnswerMessage.latitude)
  return latitude_;
}
inline void PositionAnswerMessage::set_latitude(double value) {
  set_has_latitude();
  latitude_ = value;
  // @@protoc_insertion_point(field_set:Storm.PositionAnswerMessage.latitude)
}

// required double quality = 103;
inline bool PositionAnswerMessage::has_quality() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void PositionAnswerMessage::set_has_quality() {
  _has_bits_[0] |= 0x00000020u;
}
inline void PositionAnswerMessage::clear_has_quality() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void PositionAnswerMessage::clear_quality() {
  quality_ = 0;
  clear_has_quality();
}
inline double PositionAnswerMessage::quality() const {
  // @@protoc_insertion_point(field_get:Storm.PositionAnswerMessage.quality)
  return quality_;
}
inline void PositionAnswerMessage::set_quality(double value) {
  set_has_quality();
  quality_ = value;
  // @@protoc_insertion_point(field_set:Storm.PositionAnswerMessage.quality)
}

// -------------------------------------------------------------------

// StatusMessage

// required .Storm.StatusMessage.StatusType status = 1;
inline bool StatusMessage::has_status() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StatusMessage::set_has_status() {
  _has_bits_[0] |= 0x00000001u;
}
inline void StatusMessage::clear_has_status() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void StatusMessage::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::Storm::StatusMessage_StatusType StatusMessage::status() const {
  // @@protoc_insertion_point(field_get:Storm.StatusMessage.status)
  return static_cast< ::Storm::StatusMessage_StatusType >(status_);
}
inline void StatusMessage::set_status(::Storm::StatusMessage_StatusType value) {
  assert(::Storm::StatusMessage_StatusType_IsValid(value));
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:Storm.StatusMessage.status)
}

// required string description = 2;
inline bool StatusMessage::has_description() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void StatusMessage::set_has_description() {
  _has_bits_[0] |= 0x00000002u;
}
inline void StatusMessage::clear_has_description() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void StatusMessage::clear_description() {
  if (description_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    description_->clear();
  }
  clear_has_description();
}
inline const ::std::string& StatusMessage::description() const {
  // @@protoc_insertion_point(field_get:Storm.StatusMessage.description)
  return *description_;
}
inline void StatusMessage::set_description(const ::std::string& value) {
  set_has_description();
  if (description_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    description_ = new ::std::string;
  }
  description_->assign(value);
  // @@protoc_insertion_point(field_set:Storm.StatusMessage.description)
}
inline void StatusMessage::set_description(const char* value) {
  set_has_description();
  if (description_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    description_ = new ::std::string;
  }
  description_->assign(value);
  // @@protoc_insertion_point(field_set_char:Storm.StatusMessage.description)
}
inline void StatusMessage::set_description(const char* value, size_t size) {
  set_has_description();
  if (description_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    description_ = new ::std::string;
  }
  description_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Storm.StatusMessage.description)
}
inline ::std::string* StatusMessage::mutable_description() {
  set_has_description();
  if (description_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    description_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Storm.StatusMessage.description)
  return description_;
}
inline ::std::string* StatusMessage::release_description() {
  clear_has_description();
  if (description_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = description_;
    description_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void StatusMessage::set_allocated_description(::std::string* description) {
  if (description_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete description_;
  }
  if (description) {
    set_has_description();
    description_ = description;
  } else {
    clear_has_description();
    description_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Storm.StatusMessage.description)
}

// optional int32 requestID = 101;
inline bool StatusMessage::has_requestid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void StatusMessage::set_has_requestid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void StatusMessage::clear_has_requestid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void StatusMessage::clear_requestid() {
  requestid_ = 0;
  clear_has_requestid();
}
inline ::google::protobuf::int32 StatusMessage::requestid() const {
  // @@protoc_insertion_point(field_get:Storm.StatusMessage.requestID)
  return requestid_;
}
inline void StatusMessage::set_requestid(::google::protobuf::int32 value) {
  set_has_requestid();
  requestid_ = value;
  // @@protoc_insertion_point(field_set:Storm.StatusMessage.requestID)
}

// optional string postID = 102;
inline bool StatusMessage::has_postid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void StatusMessage::set_has_postid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void StatusMessage::clear_has_postid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void StatusMessage::clear_postid() {
  if (postid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    postid_->clear();
  }
  clear_has_postid();
}
inline const ::std::string& StatusMessage::postid() const {
  // @@protoc_insertion_point(field_get:Storm.StatusMessage.postID)
  return *postid_;
}
inline void StatusMessage::set_postid(const ::std::string& value) {
  set_has_postid();
  if (postid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    postid_ = new ::std::string;
  }
  postid_->assign(value);
  // @@protoc_insertion_point(field_set:Storm.StatusMessage.postID)
}
inline void StatusMessage::set_postid(const char* value) {
  set_has_postid();
  if (postid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    postid_ = new ::std::string;
  }
  postid_->assign(value);
  // @@protoc_insertion_point(field_set_char:Storm.StatusMessage.postID)
}
inline void StatusMessage::set_postid(const char* value, size_t size) {
  set_has_postid();
  if (postid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    postid_ = new ::std::string;
  }
  postid_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Storm.StatusMessage.postID)
}
inline ::std::string* StatusMessage::mutable_postid() {
  set_has_postid();
  if (postid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    postid_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Storm.StatusMessage.postID)
  return postid_;
}
inline ::std::string* StatusMessage::release_postid() {
  clear_has_postid();
  if (postid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = postid_;
    postid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void StatusMessage::set_allocated_postid(::std::string* postid) {
  if (postid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete postid_;
  }
  if (postid) {
    set_has_postid();
    postid_ = postid;
  } else {
    clear_has_postid();
    postid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Storm.StatusMessage.postID)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace Storm

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::Storm::DirectionAnswerMessage_MotionType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Storm::DirectionAnswerMessage_MotionType>() {
  return ::Storm::DirectionAnswerMessage_MotionType_descriptor();
}
template <> struct is_proto_enum< ::Storm::StatusMessage_StatusType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Storm::StatusMessage_StatusType>() {
  return ::Storm::StatusMessage_StatusType_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_storm_2eproto__INCLUDED
