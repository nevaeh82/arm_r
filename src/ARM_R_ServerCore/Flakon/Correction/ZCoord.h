#ifndef ZCOORD_H
#define ZCOORD_H

#include <QCoreApplication>
#include <QObject>
#include <QTextCodec>
#include <QPointF>
#include <QVector>
#include <QTime>
#include <QDebug>
#include <QSettings>

//#include "ZLogger.h"
#include "ZCorrector.h"
#include "../RadiolocationInterface.h"
#include "../Solver.h"

#include <qmath.h>

/*!
    –ö–ª–∞—Å—Å, –∫–æ—Ç–æ—Ä—ã–π –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –∏ –¥—Ä—É–≥–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–≤–∏–∂–µ–Ω–∏—è –ò– –ò
*/
class ZCoord : public QObject
{
    Q_OBJECT
public:
    //! –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä (–∑–∞–¥–∞—é—Ç—Å—è –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –≤—Å–µ—Ö –ø—É–Ω–∫—Ç–æ–≤)
    explicit ZCoord(QObject *parent = 0);

    struct DataOfPoints
    {
        //! –ö–æ–ª-–≤–æ –ø—É–Ω–∫—Ç–æ–≤
        unsigned short aNumPoints;
        //! –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –ø—É–Ω–∫—Ç–æ–≤ –≥–µ–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏–µ.
        QVector<QString> aTitleOfPoint;
        //! –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –ø—É–Ω–∫—Ç–æ–≤ –≥–µ–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏–µ.
        QVector<QPointF> aCoordsOfPoint;
        //! –í—ã—Å–æ—Ç–∞ –Ω–∞–¥ –∑–µ–º–Ω–æ–π –ø–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç—å—é –∞–Ω—Ç–µ–Ω–Ω—ã –ø—Ä–∏–µ–º–Ω–æ–≥–æ –ø—É–Ω–∫—Ç–∞.
        QVector<double> aHeight;
        //! – –∞—Å—Å—Ç–æ—è–Ω–∏—è –º–µ–∂–¥—É 0 –∏ i –ø—É–Ω–∫—Ç–∞–º–∏ (–¥–ª—è –∏–Ω–¥–µ–∫—Å–æ–≤ 0 aDistance = 0).
        QVector<float> aDistance;
    };

    //! –ò–Ω–∏—Ü–∏–∞–ª—å–∑–∞—Ü–∏—è SOLVER
    void initSolver();

    /*!
        –ü–µ—Ä–µ–≤–æ–¥ –≥–µ–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏—Ö –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç –≤ –¥–µ–∫–∞—Ä—Ç–æ–≤—ã (–¥–ª—è 1 —Ç–æ—á–∫–∏).
        \param aGeogrCoord - –≥–µ–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã.
        \param lDecartCoord - cc—ã–ª–∫–∞ –Ω–∞ –¥–µ–∫–∞—Ä—Ç–æ–≤—ã –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã.
        \param aCentrCoord - –≥–µ–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã —Ü–µ–Ω—Ç—Ä–∞–ª—å–Ω–æ —Ç–æ—á–∫–∏, –∫–æ—Ç–æ—Ä–∞—è —Å–æ–æ—Ç–≤–µ—Ç—Å–≤—É–µ—Ç —Ç–æ—á–∫–µ –≤ –¥–µ–∫–∞—Ä—Ç–æ–≤—ã—Ö –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞—Ö (0,0).
    */
    void geogrToDecart(QPointF aGeogrCoord,QPointF &lDecartCoord, QPointF aCentrCoord);

    /*!
        –ó–∞–¥–∞—Ç—å –∫–æ–ª-–≤–æ –≤—ã—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö Solver (–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ 2000).
        \param aSize - –∫–æ–ª-–≤–æ –≤—ã—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –¥–ª—è Solver.
    */
    void setSolverDataSize(int aSize);

    /*!
        –ó–∞–¥–∞—Ç—å –∫–æ–ª-–≤–æ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è Solver –ø–æ –∫–æ—Ç–æ—Ä—ã–º –±—É–¥–µ—Ç –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–æ —Å—Ç–æ–∏—Ç –∏—Å—Ç–æ—á–Ω–∏–∫ –∏–ª–∏ –¥–≤–∏–≥–∞–µ—Ç—Å—è.
        \param aSize - –∫–æ–ª-–≤–æ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è Solver.
    */
    void setSolverAnalyzeSize(int aSize);


    //! –î–∞–Ω–Ω—ã–µ –æ –ø—Ä–∏–º–µ–Ω—ã—Ö –ø—É–Ω–∫—Ç–∞—Ö
    DataOfPoints mDataOfPoints;

signals:
    /*!
        –°–∏–≥–Ω–∞–ª –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ–¥–Ω–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ –≤ Solver.
        \param aItem - –£–∫–∞–∑–∞—Ç–µ–ª—å –Ω–∞ —ç–ª–µ–º–µ–Ω—Ç.
    */
    void signal_sendDataFromFlackon(const DataFromFlacon& aData);

    /*!
        –°–∏–≥–Ω–∞–ª –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ç–µ–∫—Å—Ç–∞ –Ω–∞ —Ñ–æ—Ä–º—É.
        \param aText - —Ç–µ–∫—Å—Ç.
    */
    void signal_sendText(QString aText);
    
    /*!
        –°–∏–≥–Ω–∞–ª –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –¥–∞–Ω–Ω—ã—Ö –æ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞—Ö —Ü–µ–ª–∏ –Ω–∞ —Ñ–æ—Ä–º—É.
        \param allData - –¥–∞–Ω–Ω—ã–µ.
    */
    void signal_sendCoordData(const DataFromRadioLocation& allData);

    /*!
        –°–∏–≥–Ω–∞–ª –¥–ª—è –≤–µ–∫—Ç–æ—Ä–∞ –¥–æ—Å—Ç–æ–≤–µ—Ä–Ω–æ—Å—Ç–µ–π –Ω–∞ —Ñ–æ—Ä–º—É.
        \param allData - –¥–∞–Ω–Ω—ã–µ.
    */
    void signal_sendBenchmark(QVector<float>);

public slots:
    /*!
        –°–ª–æ—Ç –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –∏–∑ Solver.
        \param aData
    */
    void getDataFromSolver(const DataFromRadioLocation& aData);

    /*!
        –î–æ—Å—Ç–∞—Ç—å —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ –º–µ–∂–¥—É –Ω—É–ª–µ–≤—ã–º (–Ω–∞ –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–∏—Ö–æ–¥—è—Ç –≤—Å–µ —Å–∏–≥–Ω–∞–ª—ã) –∏ aNumOfPoint –ø—É–Ω–∫—Ç–∞–º–∏.
        \param aNumOfPoint - –Ω–æ–º–µ—Ä –ø—Ä–∏–µ–º–Ω–æ–≥–æ –ø—É–Ω–∫—Ç–∞.
        \return - —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ –º–µ–∂–¥—É –æ—Å–Ω–æ–≤–Ω—ã–º –∏ aNumOfPoint –ø—É–Ω–∫—Ç–∞–º–∏.
    */
    float getPointsDistance(int aNumOfPoint);

    /*!
        –î–æ—Å—Ç–∞—Ç—å —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ –º–µ–∂–¥—É 2–º—è –ø—É–Ω–∫—Ç–∞–º–∏.
        \param aNumOfPoint - –Ω–æ–º–µ—Ä –ø–µ—Ä–≤–æ–≥–æ –ø—É–Ω–∫—Ç–∞.
        \param aNumOfPoint - –Ω–æ–º–µ—Ä –≤—Ç–æ—Ä–æ–≥–æ –ø—É–Ω–∫—Ç–∞.
        \return - —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ –º–µ–∂–¥—É 2–º—è –ø—É–Ω–∫—Ç–∞–º–∏.
    */
    float getPointsDistance(int aNumA, int aNumB);

    /*!
        –ü–µ—Ä–µ–≤–æ–¥ –¥–µ–∫–∞—Ä—Ç–æ–≤—ã—Ö –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç –≤ –≥–µ–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏–µ (–¥–ª—è 1 —Ç–æ—á–∫–∏).
        \param aDecartCoord - –¥–µ–∫–∞—Ä—Ç–æ–≤—ã –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã.
        \param lGeogrCoord - cc—ã–ª–∫–∞ –Ω–∞ –≥–µ–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã.
        \param aCentrCoord - –≥–µ–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã —Ü–µ–Ω—Ç—Ä–∞–ª—å–Ω–æ–π —Ç–æ—á–∫–∏, –∫–æ—Ç–æ—Ä–∞—è —Å–æ–æ—Ç–≤–µ—Ç—Å–≤—É–µ—Ç —Ç–æ—á–∫–µ –≤ –¥–µ–∫–∞—Ä—Ç–æ–≤—ã—Ö –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞—Ö (0,0).
    */
    void decartToGeogr(QPointF aDecartCoord, QPointF &lGeogrCoord, QPointF aCentrCoord);

//    /*!
//        – –∞—Å—á–µ—Ç –¥–µ–∫–∞—Ä—Ç–æ–≤—ã—Ö –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç –¥–ª—è –≤—Å–µ—Ö –ø—É–Ω–∫—Ç–æ–≤ (—Å —É—á–µ—Ç–æ–º –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –ø—É–Ω–∫—Ç–∞)
//        \param aNumMainPoint - –Ω–æ–º–µ—Ä –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –ø—Ä–∏–µ–º–Ω–æ–≥–æ –ø—É–Ω–∫—Ç–∞.
//    */
//    void countDecartCoord(unsigned int aNumMainPoint);

    /*!
        –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç–∏ —Ä–∞–∑–Ω–æ—Å—Ç–µ–π —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–π
        \param aNumMain - –Ω–æ–º–µ—Ä –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –ø—É–Ω–∫—Ç–∞.
        \param aDR - –≤–µ—Ä–∫—Ç–æ—Ä —Ä–∞–∑–Ω–æ—Å—Ç–µ–π —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–π.
        \param aBenchmark - –¥–æ—Å—Ç–æ–≤–µ—Ä–Ω–æ—Å—Ç–∏ —Ä–∞–∑–Ω–æ—Å—Ç–µ–π —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–π.
        \param aThreshold - –ø–æ–ø—Ä–æ–≥ –¥–æ—Å—Ç–æ–≤–µ—Ä–Ω–æ—Å—Ç–∏.

    */
    void checkData(int aNumMain, QVector<double> &lDR, QVector<float> aBenchmark, float aThreshold);

//    /*!
//        –ü—Ä–∏–Ω—è—Ç—å –∫–æ—Ä—Ä–µ–ª—è—Ü–∏–∏ –æ—Ç —Ñ–ª–∞–∫–æ–Ω–∞
//        \param aNumMain - –Ω–æ–º–µ—Ä –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –ø—É–Ω–∫—Ç–∞.
//        \param aCorrel - –≤–µ—Ä–∫—Ç–æ—Ä –≥—Ä–∞—Ñ–∏–∫–æ–≤ –∫–æ—Ä—Ä–µ–ª—è—Ü–∏–∏.
//        \param aThreshold - –ø–æ–ø—Ä–æ–≥ –¥–æ—Å—Ç–æ–≤–µ—Ä–Ω–æ—Å—Ç–∏ (–µ—Å–ª–∏ 0 —Ç–æ –Ω–µ —Ñ–∏–ª—å—Ç—Ä—É–µ–º –ø–æ-–¥–æ—Å—Ç–æ–≤–µ—Ä–Ω–æ—Å—Ç–∏).

//    */
//    void getFromFlacon(int aNumMain, QVector<QVector<QPointF>> aCorrel, float aThreshold);

    /*!
     – –∞—Å—Å—Ç–æ—è–Ω–∏–µ –º–µ–∂–¥—É 2–º—è —Ç–æ—á–∫–∞–º–∏ (–≥–µ–æ–≥—Ä. –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã)
     */
    double distanceAB(QPointF aCoordA, double aHgtA, QPointF aCoordB, double aHgtB);

    /*!
        –î–æ—Å—Ç–∞—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ – –î–° –ø—É–Ω–∫—Ç–∞ –ø–æ –∏–Ω–¥–µ–∫—Å—É
    */
    QString getTitle(int aIndex);

    /*!
        –î–æ—Å—Ç–∞—Ç—å –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã – –î–° –ø—É–Ω–∫—Ç–∞ –ø–æ –∏–Ω–¥–µ–∫—Å—É
    */
    QPointF getCoord(int aIndex);

    /*!
        –î–æ—Å—Ç–∞—Ç—å –∫–æ–ª-–≤–æ – –î–° –ø—É–Ω–∫—Ç–æ–≤
    */
    int getSize(void);

private:
    /*!
        –ó–∞–¥–∞–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –æ –ø—Ä–∏–µ–º–Ω—ã—Ö –ø—É–Ω–∫—Ç–∞—Ö (–≤ –∫–æ–¥–µ).
        \param lNumPoints - cc—ã–ª–∫–∞ –Ω–∞ –∫–æ–ª-–≤–æ –ø—Ä–∏–µ–º–Ω—ã—Ö –ø—É–Ω–∫—Ç–æ–≤.
        \param lCoordsOfPoint - cc—ã–ª–∫–∞ –Ω–∞ –≤–µ–∫—Ç–æ—Ä, —Å–æ–¥–µ—Ä–∂–∞—â–∏–π —à–∏—Ä–æ—Ç—É –∏ –¥–æ–ª–≥–æ—Ç—É –ø—Ä–∏–µ–º–Ω–æ–≥–æ –ø—É–Ω–∫—Ç–∞.
        \param lHeight - cc—ã–ª–∫–∞ –Ω–∞ –≤–µ–∫—Ç–æ—Ä –≤—ã—Å–æ—Ç –∞–Ω—Ç–µ–Ω–Ω—ã –ø—Ä–∏–µ–º–Ω–æ–≥–æ –ø—É–Ω–∫—Ç–∞.
    */
    void dataPoint(unsigned short &lNumPoints, QVector<QString> &lTitleOfPoint, QVector<QPointF> &lCoordsOfPoint, QVector<double> &lHeight);

    /*!
        –ó–∞–ø–∏—Å—å –¥–∞–Ω–Ω—ã—Ö –æ –ø—Ä–∏–µ–º–Ω—ã—Ö –ø—É–Ω–∫—Ç–∞—Ö –≤ –≥–ª–æ–±–∞–ª—å–Ω—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É mDataOfPoints
        \param aNumPoints - –∫–æ–ª-–≤–æ –ø—Ä–∏–µ–º–Ω—ã—Ö –ø—É–Ω–∫—Ç–æ–≤.
        \param aCoordsOfPoint - –≤–µ–∫—Ç–æ—Ä, —Å–æ–¥–µ—Ä–∂–∞—â–∏–π —à–∏—Ä–æ—Ç—É –∏ –¥–æ–ª–≥–æ—Ç—É –ø—Ä–∏–µ–º–Ω–æ–≥–æ –ø—É–Ω–∫—Ç–∞.
        \param aHeight - –≤—ã—Å–æ—Ç–∞ –∞–Ω—Ç–µ–Ω–Ω—ã –ø—Ä–∏–µ–º–Ω–æ–≥–æ –ø—É–Ω–∫—Ç–∞.
        \param lDataOfPoints - —Å—Å—ã–ª–∫–∞ –Ω–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Å –¥–∞–Ω–Ω—ã–º–∏ –æ –ø—Ä–∏–º–µ–Ω—ã—Ö –ø—É–Ω–∫—Ç–∞—Ö.
    */
    void setDataPoint(unsigned short aNumPoints, QVector<QString> aTitleOfPoint, QVector<QPointF> aCoordsOfPoint, QVector<double> aHeight, DataOfPoints &lDataOfPoints);

    /*!
        – –∞—Å—Å—á–µ—Ç —Ä–∞—Å—Å—Ç–æ—è–Ω–∏—è –º–µ–∂–¥—É –Ω—É–ª–µ–≤—ã–º (–Ω–∞ –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–∏—Ö–æ–¥—è—Ç –≤—Å–µ —Å–∏–≥–Ω–∞–ª—ã) –∏ i –ø—Ä–∏–µ–º–Ω—ã–º –ø—É–Ω–∫—Ç–æ–º
        \param lDataOfPoints - —Å—Å—ã–ª–∫–∞ –Ω–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Å –¥–∞–Ω–Ω—ã–º–∏ –æ –ø—Ä–∏–º–µ–Ω—ã—Ö –ø—É–Ω–∫—Ç–∞—Ö.
    */
    void countDistanceOfPoints(DataOfPoints &lDataOfPoints);

    /*!
        –ü–µ—Ä–µ–≤–æ–¥ –≥–µ–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏—Ö –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç –≤ –≥–µ–æ—Ä—Ü–µ–Ω—Ç—Ä–∏—á–µ—Å–∫–∏–µ (–¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–π)
        \param aCoordsOfPoint - –≥–µ–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã (lat, lon).
        \param aHeight - –≤—ã—Å–æ—Ç–∞, –º.
        \param lX - —Å—Å—ã–ª–∫–∞ –Ω–∞ X –≥–µ–æ—Ü–µ–Ω—Ç—Ä–∏—á–µ—Å–∫–∏—Ö –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç, –º.
        \param lY - —Å—Å—ã–ª–∫–∞ –Ω–∞ Y –≥–µ–æ—Ü–µ–Ω—Ç—Ä–∏—á–µ—Å–∫–∏—Ö –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç, –º.
        \param lZ - —Å—Å—ã–ª–∫–∞ –Ω–∞ Z –≥–µ–æ—Ü–µ–Ω—Ç—Ä–∏—á–µ—Å–∫–∏—Ö –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç, –º.
    */
    void convertGeogrToGeocentric(QPointF aCoordsOfPoint, float aHeight, float &lX, float &lY, float &lZ);

    /*!
        – –∞—Å—Å—á–µ—Ç —Ä–∞—Å—Å—Ç–æ—è–Ω–∏—è –º–µ–∂–¥—É 2 —Ç–æ—á–∫–∞–º–∏
        \param aX1 - X 1–π —Ç–æ—á–∫–∏, –º.
        \param aY1 - Y 1–π —Ç–æ—á–∫–∏, –º.
        \param aZ1 - Z 1–π —Ç–æ—á–∫–∏, –º.
        \param aX2 - X 2–π —Ç–æ—á–∫–∏, –º.
        \param aY2 - Y 2–π —Ç–æ—á–∫–∏, –º.
        \param aZ2 - Z 2–π —Ç–æ—á–∫–∏, –º.
        \param lDistance - —Å—Å—ã–ª–∫–∞ –Ω–∞ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ –º–µ–∂–¥—É —Ç–æ—á–∫–∞–º–∏ –≤ –º–µ—Ç—Ä–∞—Ö.
    */
    void countDistanceOfPoints(float aX1, float aY1, float aZ1, float aX2, float aY2, float aZ2, float &lDistance);




//    /*!
//        – –∞—Å—á–µ—Ç –¥–µ–∫–∞—Ä—Ç–æ–≤—ã—Ö –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç –¥–ª—è –≤—Å–µ—Ö –ø—É–Ω–∫—Ç–æ–≤ (—Å —É—á–µ—Ç–æ–º –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –ø—É–Ω–∫—Ç–∞)
//        \param aCoordsOfPoint - –≤–µ–∫—Ç–æ—Ä –≥–µ–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏—Ö –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç (lat, lon) –≤—Å–µ—Ö –ø—É–Ω–∫—Ç–æ–≤.
//        \param aNumMainPoint - –Ω–æ–º–µ—Ä –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –ø—Ä–∏–µ–º–Ω–æ–≥–æ –ø—É–Ω–∫—Ç–∞.
//        \param lDecartCoordsOfPoint - —Å—Å—ã–ª–∫–∞ –Ω–∞ –≤–µ–∫—Ç–æ—Ä –¥–µ–∫–∞—Ä—Ç–æ–≤—ã—Ö –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç –≤—Å–µ—Ö –ø—É–Ω–∫—Ç–æ–≤.
//    */
//    void countDecartCoord(QVector<QPointF> aCoordsOfPoint, unsigned int aNumMainPoint, QVector<QPointF> &lDecartCoordsOfPoint);

    //! – –∞—Å—á–µ—Ç —Ä–∞—Å—Å—Ç–æ—è–Ω–∏—è —Ä–µ—Ç—Ä–∞–Ω—Å–ª—è—Ü–∏–∏ –°–ê–ë–ï– –ò–û - –ò–ù–ì–£–  - –¢–ê–ì–õ–ê–ù - –ì–ê–õ
    double retransmissionSaberio();







//    //! –ü–æ—Ä—è–¥–æ–∫ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø—É–Ω–∫—Ç–æ–≤
//    QVector<unsigned short> mOrderProcessing;

//    //! –î–µ–∫–∞—Ä—Ç–æ–≤—ã–π –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –ø—Ä–∏–µ–º–Ω—ã—Ö –ø—É–Ω–∫—Ç–æ–≤ (–∏–∑–º–µ–Ω—è—é—Ç—Å—è –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –≤—ã–±–æ—Ä–∞ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –ø—É–Ω–∫—Ç–∞ mOrderProcessing)
//    QVector<QPointF> mDecartCoords;

    //! –ù–æ–º–µ—Ä –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –ø—É–Ω–∫—Ç–∞
    int mNumOfMainPoint;

    //! –î–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∫–∏ —Å–∏—Å—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏—Ö –æ—à–∏–±–æ–∫ –∏ –∏–Ω–≤–µ—Ä—Å–∏–∏ –∑–Ω–∞–∫–∞
    ZCorrector* mCorrector;

    //! –î–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç
    Solver* mSolver;

    //! –ö–ª–∞—Å—Å –¥–ª—è –∑–∞–ø–∏—Å–∏ –ª–æ–≥–æ–≤
//    ZLogger *mLogger;
    QString mCurrentLogName;
    
};

#endif // ZCOORD_H
